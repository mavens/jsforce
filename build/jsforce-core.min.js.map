{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core.js","jsforce-core.min.js","lib/VERSION.js","lib/_required.js","lib/browser/canvas.js","lib/browser/client.js","lib/browser/jsonp.js","lib/browser/request.js","lib/cache.js","lib/connection.js","lib/core.js","lib/csv.js","lib/date.js","lib/http-api.js","lib/logger.js","lib/oauth2.js","lib/process.js","lib/promise.js","lib/query.js","lib/quick-action.js","lib/record-stream.js","lib/record.js","lib/require.js","lib/soap.js","lib/sobject.js","lib/soql-builder.js","lib/transport.js","node_modules/asap/browser-raw.js","node_modules/base64-js/lib/b64.js","node_modules/bindings/bindings.js","node_modules/buffer-shims/index.js","node_modules/buffer/index.js","node_modules/core-util-is/lib/util.js","node_modules/csv-parse/lib/index.js","node_modules/csv-parse/lib/sync.js","node_modules/csv-stringify/lib/index.js","node_modules/csv-stringify/lib/sync.js","node_modules/events/events.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/is-buffer/index.js","node_modules/isarray/index.js","node_modules/libxmljs/index.js","node_modules/libxmljs/lib/bindings.js","node_modules/libxmljs/lib/comment.js","node_modules/libxmljs/lib/document.js","node_modules/libxmljs/lib/element.js","node_modules/libxmljs/lib/sax_parser.js","node_modules/libxmljs/lib/text.js","node_modules/libxmljs/package.json","node_modules/lodash.get/index.js","node_modules/lodash/core.js","node_modules/multistream/index.js","node_modules/path-browserify/index.js","node_modules/process-nextick-args/index.js","node_modules/process/browser.js","node_modules/promise/lib/core.js","node_modules/promise/lib/es6-extensions.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/readable-stream/duplex.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/passthrough.js","node_modules/readable-stream/readable.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/writable.js","node_modules/stream-browserify/index.js","node_modules/string_decoder/index.js","node_modules/util-deprecate/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","browser","../core","./client","2","3","inherits","util","events","lodash/core","readable-stream","multistream","./VERSION","./cache","./connection","./core","./csv","./date","./http-api","./logger","./oauth2","./process","./promise","./query","./quick-action","./record-stream","./record","./soap","./sobject","./soql-builder","./transport","4","parseHeaders","hs","headers","split","forEach","line","pair","name","toLowerCase","value","Duplex","_","supported","Sfdc","canvas","createRequest","signedRequest","params","callback","send","body","settings","client","method","data","contentType","success","responseHeaders","payload","isString","JSON","stringify","response","statusCode","status","str","end","failure","err","ajax","url","_read","size","push","bufs","sent","_write","chunk","encoding","toString","on","join","test","5","popupWin","w","h","left","screen","width","top","height","open","handleCallbackResponse","res","checkCallbackResponse","state","localStorage","getItem","removeItem","states","prefix","promptType","cli","Client","_storeTokens","location","hash","_storeError","close","qs","parse","substring","access_token","search","error","Connection","OAuth2","clientIdx","_prefix","connection","EventEmitter","prototype","init","config","tokens","_getTokens","initialize","setTimeout","emit","login","options","isFunction","extend","_prompt","oauth2","rand","Math","random","setItem","authzUrl","getAuthorizationUrl","response_type","scope","pw","href","_removeTokens","pid","setInterval","closed","clearInterval","_getError","error_description","isLoggedIn","accessToken","logout","regexp","RegExp","document","cookie","match","issuedAt","Number","Date","now","userInfo","idUrl","ids","id","pop","organizationId","instanceUrl","instance_url","issued_at","../connection","../oauth2","querystring","6","_index","jsonpParam","timeout","toUpperCase","cbFuncName","callbacks","indexOf","script","createElement","type","src","documentElement","appendChild","cleanup","content-type","clearTimeout","removeChild","7","getResponseHeaderNames","xhr","headerLines","getAllResponseHeaders","map","headerLine","XMLHttpRequest","header","setRequestHeader","onreadystatechange","readyState","headerNames","headerName","getResponseHeader","8","createCacheKey","namespace","args","Array","slice","apply","CacheEntry","fetching","get","once","isUndefined","_value","set","clear","Cache","_entries","key","entry","k","makeResponseCacheable","fn","cache","arguments","result","ret","then","undefined","makeCacheable","$fn","9","Buffer","oauthRefreshFn","conn","refreshToken","parseIdUrl","parseSignedRequest","sr","msg","json","formatDate","date","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","idUrls","userId","orgId","createUsernamePasswordRefreshFn","username","password","esc","String","replace","Promise","Logger","Query","SObject","QuickAction","HttpApi","Transport","Process","defaults","loginUrl","version","_logger","logLevel","clientId","clientSecret","redirectUri","proxyUrl","maxRequest","_transport","ProxyTransport","callOptions","process","refreshFn","_refreshDelegate","SessionRefreshDelegate","cacheOptions","describe$","describe","describeSObject$","describeSObject","describeGlobal$","describeGlobal","serverUrl","sessionId","oauthToken","CanvasTransport","limitInfo","sobjects","bind","types","so","sobject","tooling","_sessionType","_baseUrl","_normalizeUrl","request","httpApi","apiUsage","used","parseInt","limit","thenCall","requestGet","requestPost","requestPut","requestPatch","requestDelete","query","soql","run","queryAll","scanAll","queryMore","locator","retrieve","isArray","reject","all","results","insert","create","records","record","sobjectType","attributes","clone","Id","Content-Type","update","noContentResponse","errors","upsert","extIdField","extId","del","destroy","sosl","encodeURIComponent","identity","resolve","transport","JsonpTransport","user_id","organization_id","authorize","logger","requestToken","debug","refresh_token","loginByOAuth2","loginBySoap","authenticate","soapLoginEndpoint","httpRequest","SOAPAction","m","faultstring","logoutByOAuth2","logoutBySoap","revokeToken","recent","isNumber","recentItems","updated","start","deleted","tabs","limits","theme","quickActions","quickAction","actionName","buffer","10","VERSION","SfDate","RecordStream","./require","11","parseCSV","columns","csvParseSync","toCSV","csvStringifySync","parseCSVStream","csvParse","serializeCSVStream","csvStringify","csv-parse","csv-parse/lib/sync","csv-stringify","csv-stringify/lib/sync","12","zeropad","createLiteralBuilder","literal","num","_literal","toJSON","toDateLiteral","parseDate","yy","getFullYear","mm","getMonth","dd","getDate","dstr","toDateTimeLiteral","hh","mi","ss","dtstr","d","setUTCFullYear","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","offset","setTime","getTime","setFullYear","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","SfDateLiterals","YESTERDAY","TODAY","TOMORROW","LAST_WEEK","THIS_WEEK","NEXT_WEEK","LAST_MONTH","THIS_MONTH","NEXT_MONTH","LAST_90_DAYS","NEXT_90_DAYS","LAST_N_DAYS","NEXT_N_DAYS","NEXT_N_WEEKS","LAST_N_WEEKS","NEXT_N_MONTHS","LAST_N_MONTHS","THIS_QUARTER","LAST_QUARTER","NEXT_QUARTER","NEXT_N_QUARTERS","LAST_N_QUARTERS","THIS_YEAR","LAST_YEAR","NEXT_YEAR","NEXT_N_YEARS","LAST_N_YEARS","THIS_FISCAL_QUARTER","LAST_FISCAL_QUARTER","NEXT_FISCAL_QUARTER","NEXT_N_FISCAL_QUARTERS","LAST_N_FISCAL_QUARTERS","THIS_FISCAL_YEAR","LAST_FISCAL_YEAR","NEXT_FISCAL_YEAR","NEXT_N_FISCAL_YEARS","LAST_N_FISCAL_YEARS","13","parseJSON","parseXML","parseXmlString","parseText","_conn","_responseType","responseType","_noContentResponse","refreshDelegate","getRefreshDelegate","lastInstanceUrl","deferred","defer","onResume","_refreshing","promise","beforeSend","requestTime","responseTime","isSessionExpired","refresh","isErrorResponse","getError","getResponseBody","Authorization","getResponseContentType","parseResponseBody","parseBody","hasErrorInResponseBody","content","parseError","isObject","message","errorCode","_refreshFn","since","_lastRefreshedAt","libxmljs","14","createLoggerFunction","level","log","LogLevels","INFO","_logLevel","DEBUG","WARN","ERROR","FATAL","console","15","authzServiceUrl","tokenServiceUrl","revokeServiceUrl","client_id","redirect_uri","_postParams","grant_type","client_secret","req","jsonpTransport","token","16","ProcessRule","rule","approval","ApprovalProcess","list","rules","trigger","contextIds","approvals","requests","_request","_createRequest","actionType","contextId","comments","ApprovalProcessRequest","submit","approve","workitemId","_process","onResolve","onReject","_promise","rets","17","nextTick","fail","Deferred","promise/lib/es6-extensions","18","stream","SOQLBuilder","super_","objectMode","_soql","_locator","_config","select","fields","includes","include","_options","maxFetch","autoFetch","responseTarget","ResponseTargets","QueryResult","_executed","_finished","_chaining","_deferred","Readable","_fields","where","conditions","skip","sort","orderby","dir","childRelName","childConfig","table","childQuery","SubQuery","_children","crname","setResponseTarget","exec","execute","promiseCallback","Records","onRecord","removeListener","_execute","toSOQL","totalFetched","totalSize","SingleRecord","Count","nextRecordsUrl","done","read","addListener","_expandFields","findRelationTable","rname","ptable","_parent","describeCache","upperRname","childRelation","find","childRelationships","cr","relationshipName","childSObject","expandAsteriskField","field","fpath","shift","rfield","rtable","referenceTo","fpaths","expandedFields","flatten","explain","createSOQL","Serializable","filter","batch","deleteBulk","handleError","pipe","mapping","updateStream","recordMapStream","updateBulk","onResolved","parent","19","path","_path","defaultValues","20","convertRecordForSerialization","Object","keys","reduce","rec","urec","nullValue","precord","prec","pkey","createPipelineStream","s1","s2","pipeline","PassThrough","source","unpipe","dest","Transform","CSV","_transform","enc","_dataStream","converter","DataStreamConverters","serialize","Parsable","_parserStream","highWaterMark","ev","mapStream","noeval","evalMapping","$0","prop","v","isNull","mapped","filterStream","CSVStreamConverter","csv","21","RecordReference","blob","fieldName","22","required","./_required","23","convertType","schema","$","lookupValue","obj","propRegExps","toXML","attrs","elems","startTag","endTag","SOAP","_endpointUrl","endpointUrl","_xmlns","xmlns","invoke","_createEnvelope","faultcode","SessionHeader","CallOptions","24","Record","layouts$","layouts","compactLayouts$","compactLayouts","approvalLayouts$","approvalLayouts","findOne","count","count()","bulkload","operation","input","bulk","load","insertBulk","createBulk","upsertBulk","destroyBulk","deleteHardBulk","destroyHardBulk","layoutName","listviews","listview","ListView","25","createFieldsClause","cond","createConditionClause","createOrderByClause","childQueries","values","cquery","concat","operator","depth","conds","op","createFieldExpression","expr","paren","sfop","opMap","valueExpr","createValueExpression","escapeSOQLString","flag","=","$eq","!=","$ne",">","$gt","<","$lt",">=","$gte","<=","$lte","$like","$nlike","$in","$nin","$exists","26","streamify","factory","_then","newPromise","normalizeApiHost","apiHost","jsonp","followAllRedirects","env","HTTP_PROXY","proxy","HTTP_TIMEOUT","baseUrl","LOCATION_BASE_URL","host","_getHttpRequestModule","fetch","_jsonpParam","_signedRequest","_proxyUrl","proxyParams","salesforceproxy-endpoint","./browser/canvas","./browser/jsonp","27","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","28","len","lookup","revLookup","charCodeAt","toByteArray","b64","j","tmp","placeHolders","arr","Arr","L","tripletToBase64","encodeChunk","uint8","output","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","29","__filename","bindings","opts","__proto__","module_root","getRoot","getFileName","extname","b","tries","p","arrow","fs","dirname","exists","existsSync","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","platform","arch","versions","try","calling_file","fileName","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","st","captureStackTrace","stack","file","prev","cwd","30","31","dup","32","SlowBuffer","MAX_LEN","kMaxLength","alloc","fill","TypeError","RangeError","_fill","buf","fillBuf","flen","allocUnsafe","from","encodingOrOffset","ArrayBuffer","byteLength","isBuffer","out","copy","allocUnsafeSlow","33","typedArraySupport","foo","subarray","TYPED_ARRAY_SUPPORT","createBuffer","that","arg","fromArrayBuffer","fromString","fromObject","assertSize","checked","string","isEncoding","actual","write","fromArrayLike","array","byteOffset","isnan","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","isNaN","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","c","hi","lo","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","base64-js","isarray","34","objectToString","isBoolean","isNullOrUndefined","isSymbol","isRegExp","re","isDate","isError","isPrimitive","../../is-buffer/index.js","35","Parser","StringDecoder","called","chunks","parser","objname","base","base1","base10","base11","base12","base13","base14","base15","base16","base2","base3","base4","base5","base6","base7","base8","base9","rowDelimiter","delimiter","quote","escape","comment","ltrim","rtrim","auto_parse","auto_parse_date","relax","relax_column_count","skip_empty_lines","max_limit_on_data_read","skip_lines_with_empty_values","lines","skipped_line_count","empty_line_count","is_int","is_float","parseFloat","decoder","quoting","commenting","nextChar","closingQuote","rawBuf","__write","_flush","__push","lineAsColumns","row","line_length","raw","chars","areNextCharsDelimiter","areNextCharsRowDelimiters","char","escapeIsQuote","isDelimiter","isEscape","isNextCharAComment","isQuote","isRowDelimiter","nextCharPos","ref","remainingBuffer","rowDelimiterLength","wasCommenting","_this","charAt","trimRight","string_decoder","36","./index","37","Stringifier","stringifier","quoted","quotedString","eof","formatters","bool","object","countWriten","label","labels","preserve","_line","column","containsEscape","containsLinebreak","containsQuote","containsdelimiter","newLine","ref1","shouldQuote","splice","quotedEmpty","lodash.get","38","39","_events","_maxListeners","defaultMaxListeners","setMaxListeners","er","handler","listeners","context","listener","newListener","warned","trace","fired","position","removeAllListeners","listenerCount","evlistener","emitter","40","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","41","ctor","superCtor","constructor","enumerable","writable","TempCtor","42","isSlowBuffer","43","44","Document","parseXml","fromXml","parseHtml","fromHtml","parseHtmlFragment","fromHtmlFragment","libxml_version","libxml_parser_version","libxml_debug_enabled","features","Comment","Element","Text","fromXmlString","fromHtmlString","parseHtmlString","sax_parser","SaxParser","SaxPushParser","memoryUsage","xmlMemUsed","nodeCount","xmlNodeCount","./lib/bindings","./lib/comment","./lib/document","./lib/element","./lib/sax_parser","./lib/text","./package.json","45","46","doc","./bindings","./document","47","assertRoot","root","elem","_root","xpath","ns_uri","child","childNodes","formatted","_toString","_version","_encoding","validate","xsd","_validate","rngValidate","rng","_rngValidate","getDtd","_getDtd","setDtd","sys","_setDtd","namespaces","excludeImpliedElements","./element","48","attr","_attr","addChild","cdata","addCData","defineNamespace","Namespace","49","50","51","_args","rawSpec","spec","_from","_id","_inCache","_installable","_location","_nodeVersion","_npmOperationalInternal","_npmUser","email","_npmVersion","_phantomChildren","_requested","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","bugs","contributors","dependencies","nan","description","devDependencies","nodeunit","directories","dist","shasum","tarball","engines","gitHead","gypfile","homepage","license","main","maintainers","optionalDependencies","readme","repository","scripts","install","52","getValue","isHostObject","Hash","entries","hashClear","__data__","nativeCreate","hashDelete","has","hashGet","HASH_UNDEFINED","hasOwnProperty","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseToString","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","func","maskSrcKey","funcToString","memoize","resolver","FUNC_ERROR_TEXT","memoized","other","tag","funcTag","genTag","isObjectLike","symbolTag","defaultValue","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","Function","arrayProto","funcProto","objectProto","coreJsData","uid","IE_PROTO","symbolProto","53","arrayPush","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","baseValues","props","baseMap","overArg","transform","lodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","assignInDefaults","objValue","srcValue","assignValue","baseCreate","proto","objectCreate","baseDelay","wait","baseEvery","baseEach","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseFunctions","baseGt","baseIsDate","dateTag","baseIsEqual","customizer","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","argsTag","objectTag","objIsObj","othIsObj","isSameTag","objStack","othStack","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","regexpTag","baseIteratee","baseMatches","baseLt","isArrayLike","nativeKeys","UNORDERED_COMPARE_FLAG","basePick","baseRest","nativeMax","otherArgs","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","newValue","createAssigner","assigner","sources","createBaseEach","iterable","createBaseFor","keysFunc","createCtor","Ctor","thisBinding","createFind","findIndexFunc","createPartial","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","isBind","BIND_FLAG","isPartial","othLength","seen","compared","arrValue","othValue","othIndex","boolTag","numberTag","errorTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","isArguments","nativeKeysIn","compact","Boolean","findIndex","toInteger","flattenDeep","head","isReflexive","last","chain","tap","interceptor","thru","wrapperValue","every","guard","some","sortBy","criteria","before","negate","isArrayLikeObject","propertyIsEnumerable","isLength","isEmpty","isEqual","nativeIsFinite","MAX_SAFE_INTEGER","toArray","properties","assign","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","matches","mixin","methodNames","isFunc","methodName","noConflict","oldDash","noop","uniqueId","idCounter","PARTIAL_FLAG","htmlEscapes","&","\"","'","`","freeExports","nodeType","freeModule","delay","toNumber","assignIn","assignInWith","srcIndex","keysIn","pick","each","first","chainName","retUnwrapped","valueOf","54","MultiStream","streams","destroyed","_drained","_forwarding","_current","_queue","toStreams2","_attachErrorListener","_next","_readableState","wrap","_forward","_gotNextStream","onReadable","onClose","ended","onEnd","onError","55","normalizeArray","allowAboveRoot","up","unshift","xs","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","to","fromParts","toParts","samePartsLength","outputParts","sep","basename","56","arg1","arg2","arg3","57","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","title","argv","off","binding","chdir","umask","58","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_45","_81","_65","_54","doResolve","safeThen","onFulfilled","onRejected","handle","Handler","_10","handleResolved","asap","cb","finale","_97","reason","_61","asap/raw","59","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","race","./core.js","60","maxKeys","kstr","vstr","idx","decodeURIComponent","61","stringifyPrimitive","objectKeys","ks","62","decode","encode","./decode","./encode","63","./lib/_stream_duplex.js","64","Writable","readable","allowHalfOpen","onend","_writableState","processNextTick","onEndNT","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","65","./_stream_transform","66","prependListener","event","ReadableState","readableObjectMode","hwm","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","ranOut","awaitDrain","readingMore","Stream","readableAddChunk","addToFront","chunkInvalid","onEofChunk","_e","skipAdd","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","next","nb","tail","bufferShim","endReadable","endReadableNT","debugUtil","debuglog","isPaused","setEncoding","nOrig","doRead","pipeOpts","onunpipe","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","_i","paused","_fromList","./_stream_duplex","./internal/streams/BufferList","buffer-shims","string_decoder/","67","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","writeencoding","ts","_transformState","rs","ws","68","nop","WriteReq","WritableState","writableObjectMode","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","CorkedRequest","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","finishMaybe","holder","finish","prefinish","need","endWritable","setImmediate","internalUtil","deprecate","getBuffer","cork","uncork","setDefaultEncoding","util-deprecate","69","70","./lib/_stream_passthrough.js","71","READABLE_STREAM","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","72","73","74","EE","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","75","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","76","deprecated","warn","77","78","ctx","stylize","stylizeNoColor","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","numLinesEst","cur","ar","timestamp","time","getHours","getMinutes","getSeconds","months","formatRegExp","format","objects","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","origin","add","./support/isBuffer"],"mappings":"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","file":"jsforce-core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jsforce = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n\n},{\"../core\":10,\"./client\":5}],2:[function(require,module,exports){\n'use strict';\nmodule.exports = '1.7.0';\n\n},{}],3:[function(require,module,exports){\n// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};\n},{\"./VERSION\":2,\"./cache\":8,\"./connection\":9,\"./core\":10,\"./csv\":11,\"./date\":12,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"./record-stream\":20,\"./soap\":23,\"./sobject\":24,\"./soql-builder\":25,\"./transport\":26,\"events\":39,\"inherits\":41,\"lodash/core\":53,\"multistream\":54,\"readable-stream\":71,\"util\":78}],4:[function(require,module,exports){\n/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n\n},{\"lodash/core\":53,\"readable-stream\":71}],5:[function(require,module,exports){\n/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n\n},{\"../connection\":9,\"../oauth2\":15,\"events\":39,\"inherits\":41,\"lodash/core\":53,\"querystring\":62}],6:[function(require,module,exports){\n/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n\n},{\"lodash/core\":53,\"readable-stream\":71}],8:[function(require,module,exports){\n/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n\n},{\"events\":39,\"inherits\":41,\"lodash/core\":53}],9:[function(require,module,exports){\n(function (Buffer){\n/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"37.0\"\n};\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  this._transport =\n    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId && this.oauth2.clientSecret) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = new Buffer(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(ids);\n  ids = isArray ? ids : [ ids ];\n  if (ids.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(ids, function(id) {\n      if (!id) { return Promise.reject(new Error('Invalid record ID. Specify valid record ID value')).thenCall(callback); }\n      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');\n      return self.request({ method: 'GET', url: url, headers: options.headers });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<String>} [errors] - Errors (available when success = false)\n */\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      if (!sobjectType) {\n        throw new Error('No SObject Type defined in record');\n      }\n      record = _.clone(record);\n      delete record.Id;\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType ].join('/');\n      return self.request({\n        method : 'POST',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var id = record.Id;\n      if (!id) {\n        throw new Error('Record id is not found in record.');\n      }\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      if (!sobjectType) {\n        throw new Error('No SObject Type defined in record');\n      }\n      record = _.clone(record);\n      delete record.Id;\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { id : id, success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      if (!extId) {\n        return Promise.reject(new Error('External ID is not defined in the record'));\n      }\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(ids);\n  ids = isArray ? ids : [ ids ];\n  if (ids.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(ids, function(id) {\n      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');\n      return self.request({\n        method : 'DELETE',\n        url : url,\n        headers: options.headers || null\n      }, {\n        noContentResponse: { id : id, success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    url += '?format=json&oauth_token=' + encodeURIComponent(self.accessToken);\n    var transport = Transport.JsonpTransport.supported ?\n      new Transport.JsonpTransport('callback') :\n      undefined;\n    return self.request({ method: 'GET', url: url }, { transport: transport });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, callback) {\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code).then(function(res) {\n    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(callback) {\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(callback);\n  } else {\n    return this.logoutBySoap(callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(callback) {\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(callback) {\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./cache\":8,\"./core\":10,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./sobject\":24,\"./transport\":26,\"buffer\":33,\"events\":39,\"inherits\":41,\"lodash/core\":53}],10:[function(require,module,exports){\n/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n\n},{\"./VERSION\":2,\"./connection\":9,\"./date\":12,\"./oauth2\":15,\"./promise\":17,\"./record-stream\":20,\"./require\":22,\"events\":39}],11:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse'),\n    csvParseSync = require('csv-parse/lib/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n\n},{\"csv-parse\":35,\"csv-parse/lib/sync\":36,\"csv-stringify\":37,\"csv-stringify/lib/sync\":38,\"lodash/core\":53}],12:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n\n},{\"lodash/core\":53}],13:[function(require,module,exports){\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  return require('libxmljs').parseXmlString(str);\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed. Refreshed access token = \" + accessToken);\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n\n},{\"./csv\":11,\"./promise\":17,\"events\":39,\"inherits\":41,\"libxmljs\":44,\"lodash/core\":53}],14:[function(require,module,exports){\n'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n\n},{}],15:[function(require,module,exports){\n/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} options.clientSecret - OAuth2 client secret.\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  this._transport =\n    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} params.scope - Scope values in space-separated string\n   * @param {String} params.state - State parameter\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    return this._postParams({\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId,\n      client_secret : this.clientSecret\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, callback) {\n    return this._postParams({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session Token\n   *\n   * @param {String} accessToken - Access token to revoke\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(accessToken, callback) {\n    var req;\n    if (Transport.JsonpTransport.supported) {\n      var jsonpTransport = new Transport.JsonpTransport('callback');\n      req = jsonpTransport.httpRequest({\n        method: 'GET',\n        url : this.revokeServiceUrl + '?' + querystring.stringify({ token: accessToken })\n      });\n    } else {\n      req = this._transport.httpRequest({\n        method : 'POST',\n        url : this.revokeServiceUrl,\n        body: querystring.stringify({ token: accessToken }),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    }\n    return req.then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n\n},{\"./transport\":26,\"lodash/core\":53,\"querystring\":62}],16:[function(require,module,exports){\n/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n\n},{\"./connection\":9,\"./promise\":17,\"lodash/core\":53}],17:[function(require,module,exports){\n(function (process){\n/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n\n}).call(this,require('_process'))\n\n},{\"_process\":57,\"lodash/core\":53,\"promise/lib/es6-extensions\":59}],18:[function(require,module,exports){\n(function (process){\n/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n  }\n  this._options = _.defaults({\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  }, options || {});\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#skip()\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    for (var i=0, l=data.records.length; i<l; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulk delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    type = null;\n  }\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  var batch = this._conn.sobject(type).deleteBulk();\n  var deferred = Promise.defer();\n  var handleError = function(err) {\n    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records\n    else { deferred.reject(err); }\n  };\n  this.on('error', handleError)\n    .pipe(batch)\n    .on('response', function(res) { deferred.resolve(res); })\n    .on('error', handleError);\n  return deferred.promise.thenCall(callback);\n};\n\n/**\n * Bulk update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    type = null;\n  }\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  var batch = this._conn.sobject(type).updateBulk();\n  var deferred = Promise.defer();\n  var handleError = function(err) {\n    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records\n    else { deferred.reject(err); }\n  };\n  this.on('error', handleError)\n    .pipe(updateStream)\n    .on('error', handleError)\n    .pipe(batch)\n    .on('response', function(res) { deferred.resolve(res); })\n    .on('error', handleError);\n  return deferred.promise.thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n\n}).call(this,require('_process'))\n\n},{\"./date\":12,\"./promise\":17,\"./record-stream\":20,\"./soql-builder\":25,\"_process\":57,\"events\":39,\"inherits\":41,\"lodash/core\":53,\"readable-stream\":71}],19:[function(require,module,exports){\n/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n\n},{}],20:[function(require,module,exports){\n/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options);\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n\n},{\"./csv\":11,\"events\":39,\"inherits\":41,\"lodash/core\":53,\"readable-stream\":71}],21:[function(require,module,exports){\n/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n\n},{\"lodash/core\":53}],22:[function(require,module,exports){\n'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n\n},{\"./_required\":3}],23:[function(require,module,exports){\n/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n\n},{\"./http-api\":13,\"inherits\":41,\"lodash/core\":53}],24:[function(require,module,exports){\n/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n\n},{\"./cache\":8,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"lodash/core\":53}],25:[function(require,module,exports){\n/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\";\n\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) { op = \"$in\"; }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var _value;\n    for (var k in value) {\n      if (k[0] === \"$\") {\n        op = k;\n        value = value[k];\n        break;\n      }\n    }\n  }\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n\n},{\"./date\":12,\"lodash/core\":53}],26:[function(require,module,exports){\n(function (process){\n/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined') {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      if (fetch) {\n        fetch(params)\n          .then(function(response) {\n            deferred.resolve(response);\n          })\n          .catch(function(err) {\n            deferred.reject(err);\n          });\n      } else {\n        req = httpRequest(params, function(err, response) {\n          if (err) {\n            deferred.reject(err);\n          } else {\n            deferred.resolve(response);\n          }\n        });\n      }\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  if (fetch) {\n    return fetch;\n  } else {\n    return request;\n  }\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n}).call(this,require('_process'))\n\n},{\"./browser/canvas\":4,\"./browser/jsonp\":6,\"./promise\":17,\"_process\":57,\"inherits\":41,\"request\":7}],27:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],28:[function(require,module,exports){\n'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n},{}],29:[function(require,module,exports){\n(function (process,__filename){\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n\n}).call(this,require('_process'),\"/node_modules/bindings/bindings.js\")\n\n},{\"_process\":57,\"fs\":31,\"path\":55}],30:[function(require,module,exports){\n\n},{}],31:[function(require,module,exports){\narguments[4][30][0].apply(exports,arguments)\n},{\"dup\":30}],32:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar SlowBuffer = buffer.SlowBuffer;\nvar MAX_LEN = buffer.kMaxLength || 2147483647;\nexports.alloc = function alloc(size, fill, encoding) {\n  if (typeof Buffer.alloc === 'function') {\n    return Buffer.alloc(size, fill, encoding);\n  }\n  if (typeof encoding === 'number') {\n    throw new TypeError('encoding must not be number');\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  var enc = encoding;\n  var _fill = fill;\n  if (_fill === undefined) {\n    enc = undefined;\n    _fill = 0;\n  }\n  var buf = new Buffer(size);\n  if (typeof _fill === 'string') {\n    var fillBuf = new Buffer(_fill, enc);\n    var flen = fillBuf.length;\n    var i = -1;\n    while (++i < size) {\n      buf[i] = fillBuf[i % flen];\n    }\n  } else {\n    buf.fill(_fill);\n  }\n  return buf;\n}\nexports.allocUnsafe = function allocUnsafe(size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    return Buffer.allocUnsafe(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new Buffer(size);\n}\nexports.from = function from(value, encodingOrOffset, length) {\n  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n    return Buffer.from(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof value === 'string') {\n    return new Buffer(value, encodingOrOffset);\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    var offset = encodingOrOffset;\n    if (arguments.length === 1) {\n      return new Buffer(value);\n    }\n    if (typeof offset === 'undefined') {\n      offset = 0;\n    }\n    var len = length;\n    if (typeof len === 'undefined') {\n      len = value.byteLength - offset;\n    }\n    if (offset >= value.byteLength) {\n      throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (len > value.byteLength - offset) {\n      throw new RangeError('\\'length\\' is out of bounds');\n    }\n    return new Buffer(value.slice(offset, offset + len));\n  }\n  if (Buffer.isBuffer(value)) {\n    var out = new Buffer(value.length);\n    value.copy(out, 0, 0, value.length);\n    return out;\n  }\n  if (value) {\n    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n      return new Buffer(value);\n    }\n    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n      return new Buffer(value.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n}\nexports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  if (typeof Buffer.allocUnsafeSlow === 'function') {\n    return Buffer.allocUnsafeSlow(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size >= MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new SlowBuffer(size);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"buffer\":33}],33:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":28,\"ieee754\":40,\"isarray\":43}],34:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":42}],35:[function(require,module,exports){\n(function (process,Buffer){\n// Generated by CoffeeScript 1.10.0\nvar Parser, StringDecoder, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  options.objectMode = true;\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this.decoder = new StringDecoder();\n  this.buf = '';\n  this.quoting = false;\n  this.commenting = false;\n  this.field = '';\n  this.nextChar = null;\n  this.closingQuote = 0;\n  this.line = [];\n  this.chunks = [];\n  this.rawBuf = '';\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err, error;\n  if (chunk instanceof Buffer) {\n    chunk = this.decoder.write(chunk);\n  }\n  try {\n    this.__write(chunk, false);\n    return callback();\n  } catch (error) {\n    err = error;\n    return this.emit('error', err);\n  }\n};\n\nParser.prototype._flush = function(callback) {\n  var err, error;\n  try {\n    this.__write(this.decoder.end(), true);\n    if (this.quoting) {\n      this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n      return;\n    }\n    if (this.line.length > 0) {\n      this.__push(this.line);\n    }\n    return callback();\n  } catch (error) {\n    err = error;\n    return this.emit('error', err);\n  }\n};\n\nParser.prototype.__push = function(line) {\n  var field, i, j, len, lineAsColumns, rawBuf, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    this.options.columns = this.options.columns(line);\n    rawBuf = '';\n    return;\n  }\n  if (!this.line_length && line.length > 0) {\n    this.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this.line_length) {\n    if (this.options.relax_column_count) {\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      throw Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      throw Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this.rawBuf,\n      row: row\n    });\n    return this.rawBuf = '';\n  } else {\n    return this.push(row);\n  }\n};\n\nParser.prototype.__write = function(chars, end, callback) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, is_float, is_int, l, ltrim, nextCharPos, ref, remainingBuffer, results, rowDelimiter, rowDelimiterLength, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      var m;\n      if (_this.options.auto_parse && is_int(_this.field)) {\n        _this.field = parseInt(_this.field);\n      } else if (_this.options.auto_parse && is_float(_this.field)) {\n        _this.field = parseFloat(_this.field);\n      } else if (_this.options.auto_parse && _this.options.auto_parse_date) {\n        m = Date.parse(_this.field);\n        if (!isNaN(m)) {\n          _this.field = new Date(m);\n        }\n      }\n      return _this.field;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this.buf + chars;\n  l = chars.length;\n  rowDelimiterLength = this.options.rowDelimiter ? this.options.rowDelimiter.length : 0;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < rowDelimiterLength && this.options.rowDelimiter.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && this.quoting && l - i < (this.options.quote.length + rowDelimiterLength) && (this.options.quote + this.options.rowDelimiter).substr(0, l - i) === remainingBuffer) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this.nextChar ? this.nextChar : chars.charAt(i);\n    this.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      if ((!this.quoting) && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos = i + 1;\n      } else if (this.nextChar === '\\n' || this.nextChar === '\\r') {\n        rowDelimiter = this.nextChar;\n        nextCharPos = i + 2;\n        if (this.raw) {\n          rawBuf += this.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = rowDelimiter;\n        rowDelimiterLength = this.options.rowDelimiter.length;\n      }\n    }\n    if (!this.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this.nextChar === this.options.escape;\n      isQuote = this.nextChar === this.options.quote;\n      if (!(escapeIsQuote && !this.field && !this.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this.nextChar;\n        this.nextChar = chars.charAt(i + 1);\n        this.field += char;\n        if (this.options.raw) {\n          this.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this.commenting && char === this.options.quote) {\n      if (this.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && chars.substr(i + 1, this.options.rowDelimiter.length) === this.options.rowDelimiter;\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this.nextChar === this.options.comment;\n        if (this.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this.quoting = false;\n            this.field = \"\" + this.options.quote + this.field;\n          } else {\n            throw Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this.quoting = false;\n          this.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this.line.push(auto_parse(this.field));\n            this.field = '';\n          }\n          continue;\n        }\n      } else if (!this.field) {\n        this.quoting = true;\n        i++;\n        continue;\n      } else if (this.field && !this.options.relax) {\n        throw Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && chars.substr(i, this.options.rowDelimiter.length) === this.options.rowDelimiter;\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this.commenting && !this.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this.commenting = true;\n    } else if (this.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this.commenting && !this.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter && this.line.length === 0 && this.field === '') {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += this.options.rowDelimiter.length;\n          this.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this.closingQuote) {\n          this.field = this.field.trimRight();\n        }\n      }\n      this.line.push(auto_parse(this.field));\n      this.closingQuote = 0;\n      this.field = '';\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this.nextChar = chars.charAt(i);\n        if (end && !this.nextChar) {\n          isRowDelimiter = true;\n          this.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        this.__push(this.line);\n        this.line = [];\n        i += (ref = this.options.rowDelimiter) != null ? ref.length : void 0;\n        this.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this.commenting && !this.quoting && (char === ' ' || char === '\\t')) {\n      if (!(ltrim && !this.field)) {\n        this.field += char;\n      }\n      if (end && i + 1 === l) {\n        if (this.options.trim || this.options.rtrim) {\n          this.field = this.field.trimRight();\n        }\n      }\n      i++;\n    } else if (!this.commenting) {\n      this.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this.commenting && this.field.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this.commenting && this.line.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (rtrim) {\n      if (!this.closingQuote) {\n        this.field = this.field.trimRight();\n      }\n    }\n    if (this.field !== '') {\n      this.line.push(auto_parse(this.field));\n      this.field = '';\n    }\n    if (this.field.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this.line.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this.buf = '';\n  results = [];\n  while (i < l) {\n    this.buf += chars.charAt(i);\n    results.push(i++);\n  }\n  return results;\n};\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"_process\":57,\"buffer\":33,\"stream\":74,\"string_decoder\":75,\"util\":78}],36:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.10.0\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  parser.__write(data, false);\n  if (data instanceof Buffer) {\n    parser.__write(data.end(), true);\n  }\n  parser._flush((function() {}));\n  return records;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":35,\"buffer\":33,\"string_decoder\":75}],37:[function(require,module,exports){\n(function (process){\n// Generated by CoffeeScript 1.10.0\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedString == null) {\n    base3.quotedString = false;\n  }\n  if ((base4 = this.options).eof == null) {\n    base4.eof = true;\n  }\n  if ((base5 = this.options).escape == null) {\n    base5.escape = '\"';\n  }\n  if ((base6 = this.options).columns == null) {\n    base6.columns = null;\n  }\n  if ((base7 = this.options).header == null) {\n    base7.header = false;\n  }\n  if ((base8 = this.options).formatters == null) {\n    base8.formatters = {};\n  }\n  if ((base9 = this.options.formatters).date == null) {\n    base9.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base10 = this.options.formatters).bool == null) {\n    base10.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base11 = this.options.formatters).object == null) {\n    base11.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base12 = this.options).rowDelimiter == null) {\n    base12.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, error, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = typeof value === 'undefined' || value === null ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n\n}).call(this,require('_process'))\n\n},{\"_process\":57,\"lodash.get\":52,\"stream\":74,\"util\":78}],38:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.10.0\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":37,\"buffer\":33,\"string_decoder\":75}],39:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],40:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],41:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],42:[function(require,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n},{}],43:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],44:[function(require,module,exports){\n// js acts as a wrapper to the c++ bindings\n// prefer to do error handling and other abstrctions in the\n// js layer and only go to c++ when we need to hit libxml\nvar bindings = require('./lib/bindings');\n\n// document parsing for backwards compat\nvar Document = require('./lib/document');\n\n/// parse an xml string and return a Document\nmodule.exports.parseXml = Document.fromXml;\n\n/// parse an html string and return a Document\nmodule.exports.parseHtml = Document.fromHtml;\nmodule.exports.parseHtmlFragment = Document.fromHtmlFragment;\n\n// constants\nmodule.exports.version = require('./package.json').version;\nmodule.exports.libxml_version = bindings.libxml_version;\nmodule.exports.libxml_parser_version = bindings.libxml_parser_version;\nmodule.exports.libxml_debug_enabled = bindings.libxml_debug_enabled;\nmodule.exports.features = bindings.features;\n\n// lib exports\nmodule.exports.Comment = require('./lib/comment');\nmodule.exports.Document = Document;\nmodule.exports.Element = require('./lib/element');\nmodule.exports.Text = require('./lib/text');\n\n// Compatibility synonyms\nDocument.fromXmlString = Document.fromXml;\nDocument.fromHtmlString = Document.fromHtml;\nmodule.exports.parseXmlString = module.exports.parseXml;\nmodule.exports.parseHtmlString = module.exports.parseHtml;\n\nvar sax_parser = require('./lib/sax_parser');\nmodule.exports.SaxParser = sax_parser.SaxParser;\nmodule.exports.SaxPushParser = sax_parser.SaxPushParser;\n\nmodule.exports.memoryUsage = bindings.xmlMemUsed;\n\nmodule.exports.nodeCount = bindings.xmlNodeCount;\n\n},{\"./lib/bindings\":45,\"./lib/comment\":46,\"./lib/document\":47,\"./lib/element\":48,\"./lib/sax_parser\":49,\"./lib/text\":50,\"./package.json\":51}],45:[function(require,module,exports){\nmodule.exports = require('bindings')('xmljs');\n\n},{\"bindings\":29}],46:[function(require,module,exports){\nvar bindings = require('./bindings');\n\nvar Document = require('./document');\n\n/// create a new comment on the given document\n/// @param doc the Document to create the comment for\n/// @param {String} [content] comment content\n/// @constructor\nvar Comment = function(doc, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    } else if (! (doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an ' +\n                        'instance of Document');\n    }\n\n    return new bindings.Comment(doc, content);\n};\n\nComment.prototype = bindings.Comment.prototype;\n\nmodule.exports = Comment;\n\n\n},{\"./bindings\":45,\"./document\":47}],47:[function(require,module,exports){\nvar bindings = require('./bindings');\n\nvar Element = require('./element');\n\nfunction assertRoot(doc) {\n    if(!doc.root()) {\n        throw new Error('Document has no root element');\n    }\n}\n\n/// Create a new document\n/// @param {string} version xml version, default 1.0\n/// @param {string} encoding the encoding, default utf8\n/// @constructor\nfunction Document(version, encoding) {\n    version = version || '1.0';\n    var doc = new bindings.Document(version);\n    doc.encoding(encoding || 'utf8');\n    return doc;\n}\n\nDocument.prototype = bindings.Document.prototype;\n\n/// get or set the root element\n/// if called without any arguments, this will return the document root\n/// @param {Element} [elem] if specified, this will become the new document root\nDocument.prototype.root = function(elem) {\n    return this._root(elem);\n};\n\n/// add a child node to the document\n/// this will set the document root\nDocument.prototype.node = function(name, content) {\n    return this.root(Element(this, name, content));\n};\n\n/// xpath search\n/// @return array of matching elements\nDocument.prototype.find = function(xpath, ns_uri) {\n    assertRoot(this);\n\n    return this.root().find(xpath, ns_uri);\n};\n\n/// xpath search\n/// @return first element matching\nDocument.prototype.get = function(xpath, ns_uri) {\n    assertRoot(this);\n\n    return this.root().get(xpath, ns_uri);\n};\n\n/// @return a given child\nDocument.prototype.child = function(id) {\n    if (id === undefined || typeof id !== 'number') {\n        throw new Error('id argument required for #child');\n    }\n\n    assertRoot(this);\n\n    return this.root().child(id);\n};\n\n/// @return an Array of child nodes of the document root\nDocument.prototype.childNodes = function() {\n    assertRoot(this);\n\n    return this.root().childNodes();\n};\n\n/// @return a string representation of the document\nDocument.prototype.toString = function(formatted) {\n    return this._toString(formatted !== undefined ? formatted : true);\n};\n\n/// @return the document version\nDocument.prototype.version = function() {\n    return this._version();\n};\n\n/// @return the document encoding\nDocument.prototype.encoding = function(encoding) {\n    return this._encoding(encoding);\n};\n\n/// @return whether the XmlDocument is valid\nDocument.prototype.validate = function(xsd) {\n    return this._validate(xsd);\n};\n\n/// @return whether the XmlDocument is valid using Relaxed NG\nDocument.prototype.rngValidate = function(rng) {\n    return this._rngValidate(rng);\n};\n\nDocument.prototype.getDtd = function() {\n    return this._getDtd();\n};\n\nDocument.prototype.setDtd = function(name, ext, sys) {\n    if (!name) {\n        throw new Error('Must pass in a DTD name');\n    } else if (typeof name !== 'string') {\n        throw new Error('Must pass in a valid DTD name');\n    }\n\n    var params = [name];\n    if (typeof ext !== 'undefined') {\n        params.push(ext);\n    }\n    if (ext && typeof sys !== 'undefined') {\n        params.push(sys);\n    }\n\n    return this._setDtd.apply(this, params);\n};\n\n/// @return array of namespaces in document\nDocument.prototype.namespaces = function() {\n    assertRoot(this);\n\n    return this.root().namespaces();\n};\n\nDocument.prototype.type = function() {\n    return 'document';\n};\n\nmodule.exports = Document;\n\n/// parse a string into a html document\n/// @param string html string to parse\n/// @param {encoding:string, baseUrl:string} opts html string to parse\n/// @return a Document\nmodule.exports.fromHtml = function(string, opts) {\n    opts = opts || {};\n\n    // if for some reason user did not specify an object for the options\n    if (typeof(opts) !== 'object') {\n        throw new Error('fromHtml options must be an object');\n    }\n\n    return bindings.fromHtml(string, opts);\n};\n\n/// parse a string into a html document fragment\n/// @param string html string to parse\n/// @param {encoding:string, baseUrl:string} opts html string to parse\n/// @return a Document\nmodule.exports.fromHtmlFragment = function(string, opts) {\n    opts = opts || {};\n\n    // if for some reason user did not specify an object for the options\n    if (typeof(opts) !== 'object') {\n        throw new Error('fromHtmlFragment options must be an object');\n    }\n\n    opts.excludeImpliedElements = true;\n\n    return bindings.fromHtml(string, opts);\n};\n\n/// parse a string into a xml document\n/// @param string xml string to parse\n/// @return a Document\nmodule.exports.fromXml = function(string, options) {\n    return bindings.fromXml(string, options || {});\n};\n\n\n},{\"./bindings\":45,\"./element\":48}],48:[function(require,module,exports){\nvar bindings = require('./bindings');\n\n/// create a new element on the given document\n/// @param doc the Document to create the element for\n/// @param name the element name\n/// @param {String} [contenn] element content\n/// @constructor\nfunction Element(doc, name, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    } else if (! (doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an ' +\n                        'instance of Document');\n    } else if (!name) {\n        throw new Error('name argument required');\n    }\n\n    return new bindings.Element(doc, name, content);\n}\n\nElement.prototype = bindings.Element.prototype;\n\nElement.prototype.attr = function() {\n    if (arguments.length === 1) {\n        var arg = arguments[0];\n        if (typeof arg === 'object') {\n            // object setter\n            // iterate keys/value to set attributes\n            for (var k in arg) {\n                this._attr(k, arg[k]);\n            };\n            return this;\n        } else if (typeof arg === 'string') {\n            // getter\n            return this._attr(arg);\n        }\n    } else if (arguments.length === 2) {\n        // 2 arg setter\n        var name = arguments[0];\n        var value = arguments[1];\n        this._attr(name, value);\n        return this;\n    }\n};\n\n/// helper method to attach a new node to this element\n/// @param name the element name\n/// @param {String} [content] element content\nElement.prototype.node = function(name, content) {\n    var elem = Element(this.doc(), name, content);\n    this.addChild(elem);\n    return elem;\n};\n\n/// helper method to attach a cdata to this element\n/// @param name the element name\n/// @param {String} [content] element content\nElement.prototype.cdata = function(content) {\n  this.addCData(content);\n  return this;\n};\n\nElement.prototype.get = function() {\n    var res = this.find.apply(this, arguments);\n    if (res instanceof Array) {\n        return res[0];\n    } else {\n        return res;\n    }\n};\n\nElement.prototype.defineNamespace = function(prefix, href) {\n    // if no prefix specified\n    if (!href) {\n        href = prefix;\n        prefix = null;\n    }\n    return new bindings.Namespace(this, prefix, href);\n};\n\nmodule.exports = Element;\n\n\n},{\"./bindings\":45}],49:[function(require,module,exports){\nvar events = require('events');\n\nvar bindings = require('./bindings');\n\nvar SaxParser = function(callbacks) {\n    var parser = new bindings.SaxParser();\n\n    // attach callbacks\n    for (var callback in callbacks) {\n        parser.on(callback, callbacks[callback]);\n    }\n\n    return parser;\n};\n\n// Overriding the prototype, like util.inherit, wipes out the native binding.\n// Copy over the methods instead.\nfor (var k in events.EventEmitter.prototype)\n    bindings.SaxParser.prototype[k] = events.EventEmitter.prototype[k];\n\nvar SaxPushParser = function(callbacks) {\n    var parser = new bindings.SaxPushParser();\n\n    // attach callbacks\n    for (var callback in callbacks) {\n        parser.on(callback, callbacks[callback]);\n    }\n\n    return parser;\n};\n\n// Overriding the prototype, like util.inherit, wipes out the native binding.\n// Copy over the methods instead.\nfor (var k in events.EventEmitter.prototype)\n    bindings.SaxPushParser.prototype[k] = events.EventEmitter.prototype[k];\n\nmodule.exports.SaxParser = SaxParser;\nmodule.exports.SaxPushParser = SaxPushParser;\n\n\n},{\"./bindings\":45,\"events\":39}],50:[function(require,module,exports){\nvar bindings = require(\"./bindings\");\n\n/// create a new element on the given document\n/// @param doc the Document to create the element for\n/// @param name the element name\n/// @param {String} [contenn] element content\n/// @constructor\n\n\nfunction Text(doc, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    }\n\n    if (!(doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an instance of Document');\n    }\n\n    if (!content) {\n        throw new Error('content argument required');\n    }\n\n    return new bindings.Text(doc, content);\n}\n\nText.prototype = bindings.Text.prototype;\n\nmodule.exports = Text;\n\n},{\"./bindings\":45}],51:[function(require,module,exports){\nmodule.exports={\n  \"_args\": [\n    [\n      {\n        \"name\": \"libxmljs\",\n        \"raw\": \"libxmljs\",\n        \"rawSpec\": \"\",\n        \"scope\": null,\n        \"spec\": \"latest\",\n        \"type\": \"tag\"\n      },\n      \"/Users/josephferraro/Development/Github/jsforce-fetch\"\n    ]\n  ],\n  \"_from\": \"libxmljs@latest\",\n  \"_id\": \"libxmljs@0.18.0\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/libxmljs\",\n  \"_nodeVersion\": \"6.2.0\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-12-west.internal.npmjs.com\",\n    \"tmp\": \"tmp/libxmljs-0.18.0.tgz_1463968639662_0.2564493091776967\"\n  },\n  \"_npmUser\": {\n    \"email\": \"shtylman@gmail.com\",\n    \"name\": \"defunctzombie\"\n  },\n  \"_npmVersion\": \"3.8.9\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"libxmljs\",\n    \"raw\": \"libxmljs\",\n    \"rawSpec\": \"\",\n    \"scope\": null,\n    \"spec\": \"latest\",\n    \"type\": \"tag\"\n  },\n  \"_requiredBy\": [\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/libxmljs/-/libxmljs-0.18.0.tgz\",\n  \"_shasum\": \"e2993dcf28e4dc60e73486e2db6225dc24d18531\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"libxmljs\",\n  \"_where\": \"/Users/josephferraro/Development/Github/jsforce-fetch\",\n  \"author\": {\n    \"name\": \"Marco Rogers\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/polotek/libxmljs/issues\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Jeff Smick\"\n    }\n  ],\n  \"dependencies\": {\n    \"bindings\": \"1.2.1\",\n    \"nan\": \"2.3.2\"\n  },\n  \"description\": \"libxml bindings for v8 javascript engine\",\n  \"devDependencies\": {\n    \"nodeunit\": \"0.9.0\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"e2993dcf28e4dc60e73486e2db6225dc24d18531\",\n    \"tarball\": \"https://registry.npmjs.org/libxmljs/-/libxmljs-0.18.0.tgz\"\n  },\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"gitHead\": \"a117c5923e2bed5e7fffa67c0a5b24c62a6970e8\",\n  \"gypfile\": true,\n  \"homepage\": \"https://github.com/polotek/libxmljs#readme\",\n  \"license\": \"MIT\",\n  \"main\": \"./index\",\n  \"maintainers\": [\n    {\n      \"email\": \"marco.rogers@gmail.com\",\n      \"name\": \"polotek\"\n    },\n    {\n      \"email\": \"shtylman@gmail.com\",\n      \"name\": \"defunctzombie\"\n    }\n  ],\n  \"name\": \"libxmljs\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/polotek/libxmljs.git\"\n  },\n  \"scripts\": {\n    \"install\": \"node-gyp rebuild\",\n    \"test\": \"node --expose_gc ./node_modules/.bin/nodeunit test\"\n  },\n  \"version\": \"0.18.0\"\n}\n\n},{}],52:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],53:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.15.0';\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      PARTIAL_FLAG = 32;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"'`]/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject() {\n    return false;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var objectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array of at least `200` elements\n   * and any iteratees accept only one argument. The heuristic for whether a\n   * section qualifies for shortcut fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Used by `_.defaults` to customize its `_.assignIn` use.\n   *\n   * @private\n   * @param {*} objValue The destination value.\n   * @param {*} srcValue The source value.\n   * @param {string} key The key of the property to assign.\n   * @param {Object} object The parent object of `objValue`.\n   * @returns {*} Returns the value to assign.\n   */\n  function assignInDefaults(objValue, srcValue, key, object) {\n    if (objValue === undefined ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n      return srcValue;\n    }\n    return objValue;\n  }\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = value;\n    }\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(proto) {\n    return isObject(proto) ? objectCreate(proto) : {};\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && objectToString.call(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {boolean} [bitmask] The bitmask of comparison flags.\n   *  The bitmask may be composed of the following flags:\n   *     1 - Unordered comparison\n   *     2 - Partial comparison\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, customizer, bitmask, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = arrayTag,\n        othTag = arrayTag;\n\n    if (!objIsArr) {\n      objTag = objectToString.call(object);\n      objTag = objTag == argsTag ? objectTag : objTag;\n    }\n    if (!othIsArr) {\n      othTag = objectToString.call(other);\n      othTag = othTag == argsTag ? objectTag : othTag;\n    }\n    var objIsObj = objTag == objectTag && !isHostObject(object),\n        othIsObj = othTag == objectTag && !isHostObject(other),\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n        : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObject(value) && objectToString.call(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} props The property identifiers to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = array;\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      assignValue(object, key, newValue === undefined ? source[key] : newValue);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & UNORDERED_COMPARE_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, customizer, bitmask, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string key if it's not a string or symbol.\n   *\n   * @private\n   * @param {*} value The value to inspect.\n   * @returns {string|symbol} Returns the key.\n   */\n  var toKey = String;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length,\n        args = Array(length ? length - 1 : 0),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return length\n      ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n      : [];\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array ? array.length : 0;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array ? array.length : 0;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array ? array.length : 0;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _([1, 2]).forEach(function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, function(o) { return o.user; });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   *\n   * _.sortBy(users, 'user', function(o) {\n   *   return Math.floor(o.age / 10);\n   * });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, BIND_FLAG | PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one or more milliseconds.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n      (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n  }\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * This method is like `_.isArrayLike` except that it also checks if `value`\n   * is an object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array-like object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArrayLikeObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLikeObject(document.body.children);\n   * // => true\n   *\n   * _.isArrayLikeObject('abc');\n   * // => false\n   *\n   * _.isArrayLikeObject(_.noop);\n   * // => false\n   */\n  function isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && objectToString.call(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are **not** supported.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : '';\n    return tag == funcTag || tag == genTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && objectToString.call(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * This method is like `_.assignIn` except that it accepts `customizer`\n   * which is invoked to produce the assigned values. If `customizer` returns\n   * `undefined`, assignment is handled by the method instead. The `customizer`\n   * is invoked with five arguments: (objValue, srcValue, key, object, source).\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extendWith\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} sources The source objects.\n   * @param {Function} [customizer] The function to customize assigned values.\n   * @returns {Object} Returns `object`.\n   * @see _.assignWith\n   * @example\n   *\n   * function customizer(objValue, srcValue) {\n   *   return _.isUndefined(objValue) ? srcValue : objValue;\n   * }\n   *\n   * var defaults = _.partialRight(_.assignInWith, customizer);\n   *\n   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n    copyObject(source, keysIn(source), object, customizer);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties ? assign(result, properties) : result;\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(args) {\n    args.push(undefined, assignInDefaults);\n    return assignInWith.apply(undefined, args);\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [props] The property identifiers to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = baseRest(function(object, props) {\n    return object == null ? {} : basePick(object, baseMap(baseFlatten(props, 1), toKey));\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object ? baseValues(object, keys(object)) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n   * their corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * Backticks are escaped because in IE < 9, they can break out of\n   * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n   * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n   * [#133](https://html5sec.org/#133) of the\n   * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],54:[function(require,module,exports){\nmodule.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2 (s) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable().wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n\n},{\"inherits\":41,\"readable-stream\":71}],55:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n\n},{\"_process\":57}],56:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n}).call(this,require('_process'))\n\n},{\"_process\":57}],57:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],58:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":27}],59:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":58}],60:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],61:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],62:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":60,\"./encode\":61}],63:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\":64}],64:[function(require,module,exports){\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n},{\"./_stream_readable\":66,\"./_stream_writable\":68,\"core-util-is\":34,\"inherits\":41,\"process-nextick-args\":56}],65:[function(require,module,exports){\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":67,\"core-util-is\":34,\"inherits\":41}],66:[function(require,module,exports){\n(function (process){\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction prependListener(emitter, event, fn) {\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = bufferShim.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = bufferShim.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this,require('_process'))\n\n},{\"./_stream_duplex\":64,\"./internal/streams/BufferList\":69,\"_process\":57,\"buffer\":33,\"buffer-shims\":32,\"core-util-is\":34,\"events\":39,\"inherits\":41,\"isarray\":43,\"process-nextick-args\":56,\"string_decoder/\":75,\"util\":30}],67:[function(require,module,exports){\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n},{\"./_stream_duplex\":64,\"core-util-is\":34,\"inherits\":41}],68:[function(require,module,exports){\n(function (process){\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n  } catch (_) {}\n})();\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = bufferShim.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) processNextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n}).call(this,require('_process'))\n\n},{\"./_stream_duplex\":64,\"_process\":57,\"buffer\":33,\"buffer-shims\":32,\"core-util-is\":34,\"events\":39,\"inherits\":41,\"process-nextick-args\":56,\"util-deprecate\":76}],69:[function(require,module,exports){\n'use strict';\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nmodule.exports = BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return bufferShim.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = bufferShim.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n},{\"buffer\":33,\"buffer-shims\":32}],70:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_passthrough.js\")\n\n},{\"./lib/_stream_passthrough.js\":65}],71:[function(require,module,exports){\n(function (process){\nvar Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\nif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n}\n\n}).call(this,require('_process'))\n\n},{\"./lib/_stream_duplex.js\":64,\"./lib/_stream_passthrough.js\":65,\"./lib/_stream_readable.js\":66,\"./lib/_stream_transform.js\":67,\"./lib/_stream_writable.js\":68,\"_process\":57}],72:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_transform.js\")\n\n},{\"./lib/_stream_transform.js\":67}],73:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_writable.js\")\n\n},{\"./lib/_stream_writable.js\":68}],74:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":39,\"inherits\":41,\"readable-stream/duplex.js\":63,\"readable-stream/passthrough.js\":70,\"readable-stream/readable.js\":71,\"readable-stream/transform.js\":72,\"readable-stream/writable.js\":73}],75:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n},{\"buffer\":33}],76:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],77:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],78:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":77,\"_process\":57,\"inherits\":41}]},{},[1])(1)\n});\n\n","'use strict';\nmodule.exports = '1.7.0';\n","// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};","/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n","/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n","/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};","'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n","/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n","/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"37.0\"\n};\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  this._transport =\n    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId && this.oauth2.clientSecret) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = new Buffer(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(ids);\n  ids = isArray ? ids : [ ids ];\n  if (ids.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(ids, function(id) {\n      if (!id) { return Promise.reject(new Error('Invalid record ID. Specify valid record ID value')).thenCall(callback); }\n      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');\n      return self.request({ method: 'GET', url: url, headers: options.headers });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<String>} [errors] - Errors (available when success = false)\n */\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      if (!sobjectType) {\n        throw new Error('No SObject Type defined in record');\n      }\n      record = _.clone(record);\n      delete record.Id;\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType ].join('/');\n      return self.request({\n        method : 'POST',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var id = record.Id;\n      if (!id) {\n        throw new Error('Record id is not found in record.');\n      }\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      if (!sobjectType) {\n        throw new Error('No SObject Type defined in record');\n      }\n      record = _.clone(record);\n      delete record.Id;\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { id : id, success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      if (!extId) {\n        return Promise.reject(new Error('External ID is not defined in the record'));\n      }\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(ids);\n  ids = isArray ? ids : [ ids ];\n  if (ids.length > self.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(ids, function(id) {\n      var url = [ self._baseUrl(), \"sobjects\", type, id ].join('/');\n      return self.request({\n        method : 'DELETE',\n        url : url,\n        headers: options.headers || null\n      }, {\n        noContentResponse: { id : id, success : true, errors : [] }\n      });\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    url += '?format=json&oauth_token=' + encodeURIComponent(self.accessToken);\n    var transport = Transport.JsonpTransport.supported ?\n      new Transport.JsonpTransport('callback') :\n      undefined;\n    return self.request({ method: 'GET', url: url }, { transport: transport });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, callback) {\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code).then(function(res) {\n    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    logger.debug(\"OAuth2 token response = \" + JSON.stringify(res));\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(callback) {\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(callback);\n  } else {\n    return this.logoutBySoap(callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(callback) {\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(callback) {\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n","/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n","'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse'),\n    csvParseSync = require('csv-parse/lib/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n","'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n","'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  return require('libxmljs').parseXmlString(str);\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed. Refreshed access token = \" + accessToken);\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n","'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n","/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} options.clientSecret - OAuth2 client secret.\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  this._transport =\n    options.proxyUrl ? new Transport.ProxyTransport(options.proxyUrl) : new Transport();\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} params.scope - Scope values in space-separated string\n   * @param {String} params.state - State parameter\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    return this._postParams({\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId,\n      client_secret : this.clientSecret\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, callback) {\n    return this._postParams({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session Token\n   *\n   * @param {String} accessToken - Access token to revoke\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(accessToken, callback) {\n    var req;\n    if (Transport.JsonpTransport.supported) {\n      var jsonpTransport = new Transport.JsonpTransport('callback');\n      req = jsonpTransport.httpRequest({\n        method: 'GET',\n        url : this.revokeServiceUrl + '?' + querystring.stringify({ token: accessToken })\n      });\n    } else {\n      req = this._transport.httpRequest({\n        method : 'POST',\n        url : this.revokeServiceUrl,\n        body: querystring.stringify({ token: accessToken }),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    }\n    return req.then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n","/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n","/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n","/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n  }\n  this._options = _.defaults({\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  }, options || {});\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#skip()\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    for (var i=0, l=data.records.length; i<l; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulk delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    type = null;\n  }\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  var batch = this._conn.sobject(type).deleteBulk();\n  var deferred = Promise.defer();\n  var handleError = function(err) {\n    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records\n    else { deferred.reject(err); }\n  };\n  this.on('error', handleError)\n    .pipe(batch)\n    .on('response', function(res) { deferred.resolve(res); })\n    .on('error', handleError);\n  return deferred.promise.thenCall(callback);\n};\n\n/**\n * Bulk update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    type = null;\n  }\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  var batch = this._conn.sobject(type).updateBulk();\n  var deferred = Promise.defer();\n  var handleError = function(err) {\n    if (err.name === 'ClientInputError') { deferred.resolve([]); } // if batch input receives no records\n    else { deferred.reject(err); }\n  };\n  this.on('error', handleError)\n    .pipe(updateStream)\n    .on('error', handleError)\n    .pipe(batch)\n    .on('response', function(res) { deferred.resolve(res); })\n    .on('error', handleError);\n  return deferred.promise.thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n","/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n","/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options);\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n","/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n","'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n","/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n","/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n","/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\";\n\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) { op = \"$in\"; }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var _value;\n    for (var k in value) {\n      if (k[0] === \"$\") {\n        op = k;\n        value = value[k];\n        break;\n      }\n    }\n  }\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n","/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined') {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      if (fetch) {\n        fetch(params)\n          .then(function(response) {\n            deferred.resolve(response);\n          })\n          .catch(function(err) {\n            deferred.reject(err);\n          });\n      } else {\n        req = httpRequest(params, function(err, response) {\n          if (err) {\n            deferred.reject(err);\n          } else {\n            deferred.resolve(response);\n          }\n        });\n      }\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  if (fetch) {\n    return fetch;\n  } else {\n    return request;\n  }\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","'use strict'\n\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nfunction init () {\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\ninit()\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n","'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar SlowBuffer = buffer.SlowBuffer;\nvar MAX_LEN = buffer.kMaxLength || 2147483647;\nexports.alloc = function alloc(size, fill, encoding) {\n  if (typeof Buffer.alloc === 'function') {\n    return Buffer.alloc(size, fill, encoding);\n  }\n  if (typeof encoding === 'number') {\n    throw new TypeError('encoding must not be number');\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  var enc = encoding;\n  var _fill = fill;\n  if (_fill === undefined) {\n    enc = undefined;\n    _fill = 0;\n  }\n  var buf = new Buffer(size);\n  if (typeof _fill === 'string') {\n    var fillBuf = new Buffer(_fill, enc);\n    var flen = fillBuf.length;\n    var i = -1;\n    while (++i < size) {\n      buf[i] = fillBuf[i % flen];\n    }\n  } else {\n    buf.fill(_fill);\n  }\n  return buf;\n}\nexports.allocUnsafe = function allocUnsafe(size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    return Buffer.allocUnsafe(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size > MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new Buffer(size);\n}\nexports.from = function from(value, encodingOrOffset, length) {\n  if (typeof Buffer.from === 'function' && (!global.Uint8Array || Uint8Array.from !== Buffer.from)) {\n    return Buffer.from(value, encodingOrOffset, length);\n  }\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n  if (typeof value === 'string') {\n    return new Buffer(value, encodingOrOffset);\n  }\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    var offset = encodingOrOffset;\n    if (arguments.length === 1) {\n      return new Buffer(value);\n    }\n    if (typeof offset === 'undefined') {\n      offset = 0;\n    }\n    var len = length;\n    if (typeof len === 'undefined') {\n      len = value.byteLength - offset;\n    }\n    if (offset >= value.byteLength) {\n      throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (len > value.byteLength - offset) {\n      throw new RangeError('\\'length\\' is out of bounds');\n    }\n    return new Buffer(value.slice(offset, offset + len));\n  }\n  if (Buffer.isBuffer(value)) {\n    var out = new Buffer(value.length);\n    value.copy(out, 0, 0, value.length);\n    return out;\n  }\n  if (value) {\n    if (Array.isArray(value) || (typeof ArrayBuffer !== 'undefined' && value.buffer instanceof ArrayBuffer) || 'length' in value) {\n      return new Buffer(value);\n    }\n    if (value.type === 'Buffer' && Array.isArray(value.data)) {\n      return new Buffer(value.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ' + 'ArrayBuffer, Array, or array-like object.');\n}\nexports.allocUnsafeSlow = function allocUnsafeSlow(size) {\n  if (typeof Buffer.allocUnsafeSlow === 'function') {\n    return Buffer.allocUnsafeSlow(size);\n  }\n  if (typeof size !== 'number') {\n    throw new TypeError('size must be a number');\n  }\n  if (size >= MAX_LEN) {\n    throw new RangeError('size is too large');\n  }\n  return new SlowBuffer(size);\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Generated by CoffeeScript 1.10.0\nvar Parser, StringDecoder, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  options.objectMode = true;\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this.decoder = new StringDecoder();\n  this.buf = '';\n  this.quoting = false;\n  this.commenting = false;\n  this.field = '';\n  this.nextChar = null;\n  this.closingQuote = 0;\n  this.line = [];\n  this.chunks = [];\n  this.rawBuf = '';\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err, error;\n  if (chunk instanceof Buffer) {\n    chunk = this.decoder.write(chunk);\n  }\n  try {\n    this.__write(chunk, false);\n    return callback();\n  } catch (error) {\n    err = error;\n    return this.emit('error', err);\n  }\n};\n\nParser.prototype._flush = function(callback) {\n  var err, error;\n  try {\n    this.__write(this.decoder.end(), true);\n    if (this.quoting) {\n      this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n      return;\n    }\n    if (this.line.length > 0) {\n      this.__push(this.line);\n    }\n    return callback();\n  } catch (error) {\n    err = error;\n    return this.emit('error', err);\n  }\n};\n\nParser.prototype.__push = function(line) {\n  var field, i, j, len, lineAsColumns, rawBuf, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    this.options.columns = this.options.columns(line);\n    rawBuf = '';\n    return;\n  }\n  if (!this.line_length && line.length > 0) {\n    this.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this.line_length) {\n    if (this.options.relax_column_count) {\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      throw Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      throw Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this.rawBuf,\n      row: row\n    });\n    return this.rawBuf = '';\n  } else {\n    return this.push(row);\n  }\n};\n\nParser.prototype.__write = function(chars, end, callback) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, is_float, is_int, l, ltrim, nextCharPos, ref, remainingBuffer, results, rowDelimiter, rowDelimiterLength, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      var m;\n      if (_this.options.auto_parse && is_int(_this.field)) {\n        _this.field = parseInt(_this.field);\n      } else if (_this.options.auto_parse && is_float(_this.field)) {\n        _this.field = parseFloat(_this.field);\n      } else if (_this.options.auto_parse && _this.options.auto_parse_date) {\n        m = Date.parse(_this.field);\n        if (!isNaN(m)) {\n          _this.field = new Date(m);\n        }\n      }\n      return _this.field;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this.buf + chars;\n  l = chars.length;\n  rowDelimiterLength = this.options.rowDelimiter ? this.options.rowDelimiter.length : 0;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < rowDelimiterLength && this.options.rowDelimiter.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && this.quoting && l - i < (this.options.quote.length + rowDelimiterLength) && (this.options.quote + this.options.rowDelimiter).substr(0, l - i) === remainingBuffer) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this.nextChar ? this.nextChar : chars.charAt(i);\n    this.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      if ((!this.quoting) && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos = i + 1;\n      } else if (this.nextChar === '\\n' || this.nextChar === '\\r') {\n        rowDelimiter = this.nextChar;\n        nextCharPos = i + 2;\n        if (this.raw) {\n          rawBuf += this.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = rowDelimiter;\n        rowDelimiterLength = this.options.rowDelimiter.length;\n      }\n    }\n    if (!this.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this.nextChar === this.options.escape;\n      isQuote = this.nextChar === this.options.quote;\n      if (!(escapeIsQuote && !this.field && !this.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this.nextChar;\n        this.nextChar = chars.charAt(i + 1);\n        this.field += char;\n        if (this.options.raw) {\n          this.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this.commenting && char === this.options.quote) {\n      if (this.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && chars.substr(i + 1, this.options.rowDelimiter.length) === this.options.rowDelimiter;\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this.nextChar === this.options.comment;\n        if (this.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this.quoting = false;\n            this.field = \"\" + this.options.quote + this.field;\n          } else {\n            throw Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this.quoting = false;\n          this.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this.line.push(auto_parse(this.field));\n            this.field = '';\n          }\n          continue;\n        }\n      } else if (!this.field) {\n        this.quoting = true;\n        i++;\n        continue;\n      } else if (this.field && !this.options.relax) {\n        throw Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && chars.substr(i, this.options.rowDelimiter.length) === this.options.rowDelimiter;\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this.commenting && !this.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this.commenting = true;\n    } else if (this.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this.commenting && !this.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter && this.line.length === 0 && this.field === '') {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += this.options.rowDelimiter.length;\n          this.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this.closingQuote) {\n          this.field = this.field.trimRight();\n        }\n      }\n      this.line.push(auto_parse(this.field));\n      this.closingQuote = 0;\n      this.field = '';\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this.nextChar = chars.charAt(i);\n        if (end && !this.nextChar) {\n          isRowDelimiter = true;\n          this.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        this.__push(this.line);\n        this.line = [];\n        i += (ref = this.options.rowDelimiter) != null ? ref.length : void 0;\n        this.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this.commenting && !this.quoting && (char === ' ' || char === '\\t')) {\n      if (!(ltrim && !this.field)) {\n        this.field += char;\n      }\n      if (end && i + 1 === l) {\n        if (this.options.trim || this.options.rtrim) {\n          this.field = this.field.trimRight();\n        }\n      }\n      i++;\n    } else if (!this.commenting) {\n      this.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this.commenting && this.field.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this.commenting && this.line.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (rtrim) {\n      if (!this.closingQuote) {\n        this.field = this.field.trimRight();\n      }\n    }\n    if (this.field !== '') {\n      this.line.push(auto_parse(this.field));\n      this.field = '';\n    }\n    if (this.field.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this.line.length > this.options.max_limit_on_data_read) {\n      throw Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this.buf = '';\n  results = [];\n  while (i < l) {\n    this.buf += chars.charAt(i);\n    results.push(i++);\n  }\n  return results;\n};\n","// Generated by CoffeeScript 1.10.0\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  parser.__write(data, false);\n  if (data instanceof Buffer) {\n    parser.__write(data.end(), true);\n  }\n  parser._flush((function() {}));\n  return records;\n};\n","// Generated by CoffeeScript 1.10.0\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedString == null) {\n    base3.quotedString = false;\n  }\n  if ((base4 = this.options).eof == null) {\n    base4.eof = true;\n  }\n  if ((base5 = this.options).escape == null) {\n    base5.escape = '\"';\n  }\n  if ((base6 = this.options).columns == null) {\n    base6.columns = null;\n  }\n  if ((base7 = this.options).header == null) {\n    base7.header = false;\n  }\n  if ((base8 = this.options).formatters == null) {\n    base8.formatters = {};\n  }\n  if ((base9 = this.options.formatters).date == null) {\n    base9.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base10 = this.options.formatters).bool == null) {\n    base10.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base11 = this.options.formatters).object == null) {\n    base11.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base12 = this.options).rowDelimiter == null) {\n    base12.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, error, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = typeof value === 'undefined' || value === null ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n","// Generated by CoffeeScript 1.10.0\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// js acts as a wrapper to the c++ bindings\n// prefer to do error handling and other abstrctions in the\n// js layer and only go to c++ when we need to hit libxml\nvar bindings = require('./lib/bindings');\n\n// document parsing for backwards compat\nvar Document = require('./lib/document');\n\n/// parse an xml string and return a Document\nmodule.exports.parseXml = Document.fromXml;\n\n/// parse an html string and return a Document\nmodule.exports.parseHtml = Document.fromHtml;\nmodule.exports.parseHtmlFragment = Document.fromHtmlFragment;\n\n// constants\nmodule.exports.version = require('./package.json').version;\nmodule.exports.libxml_version = bindings.libxml_version;\nmodule.exports.libxml_parser_version = bindings.libxml_parser_version;\nmodule.exports.libxml_debug_enabled = bindings.libxml_debug_enabled;\nmodule.exports.features = bindings.features;\n\n// lib exports\nmodule.exports.Comment = require('./lib/comment');\nmodule.exports.Document = Document;\nmodule.exports.Element = require('./lib/element');\nmodule.exports.Text = require('./lib/text');\n\n// Compatibility synonyms\nDocument.fromXmlString = Document.fromXml;\nDocument.fromHtmlString = Document.fromHtml;\nmodule.exports.parseXmlString = module.exports.parseXml;\nmodule.exports.parseHtmlString = module.exports.parseHtml;\n\nvar sax_parser = require('./lib/sax_parser');\nmodule.exports.SaxParser = sax_parser.SaxParser;\nmodule.exports.SaxPushParser = sax_parser.SaxPushParser;\n\nmodule.exports.memoryUsage = bindings.xmlMemUsed;\n\nmodule.exports.nodeCount = bindings.xmlNodeCount;\n","module.exports = require('bindings')('xmljs');\n","var bindings = require('./bindings');\n\nvar Document = require('./document');\n\n/// create a new comment on the given document\n/// @param doc the Document to create the comment for\n/// @param {String} [content] comment content\n/// @constructor\nvar Comment = function(doc, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    } else if (! (doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an ' +\n                        'instance of Document');\n    }\n\n    return new bindings.Comment(doc, content);\n};\n\nComment.prototype = bindings.Comment.prototype;\n\nmodule.exports = Comment;\n\n","var bindings = require('./bindings');\n\nvar Element = require('./element');\n\nfunction assertRoot(doc) {\n    if(!doc.root()) {\n        throw new Error('Document has no root element');\n    }\n}\n\n/// Create a new document\n/// @param {string} version xml version, default 1.0\n/// @param {string} encoding the encoding, default utf8\n/// @constructor\nfunction Document(version, encoding) {\n    version = version || '1.0';\n    var doc = new bindings.Document(version);\n    doc.encoding(encoding || 'utf8');\n    return doc;\n}\n\nDocument.prototype = bindings.Document.prototype;\n\n/// get or set the root element\n/// if called without any arguments, this will return the document root\n/// @param {Element} [elem] if specified, this will become the new document root\nDocument.prototype.root = function(elem) {\n    return this._root(elem);\n};\n\n/// add a child node to the document\n/// this will set the document root\nDocument.prototype.node = function(name, content) {\n    return this.root(Element(this, name, content));\n};\n\n/// xpath search\n/// @return array of matching elements\nDocument.prototype.find = function(xpath, ns_uri) {\n    assertRoot(this);\n\n    return this.root().find(xpath, ns_uri);\n};\n\n/// xpath search\n/// @return first element matching\nDocument.prototype.get = function(xpath, ns_uri) {\n    assertRoot(this);\n\n    return this.root().get(xpath, ns_uri);\n};\n\n/// @return a given child\nDocument.prototype.child = function(id) {\n    if (id === undefined || typeof id !== 'number') {\n        throw new Error('id argument required for #child');\n    }\n\n    assertRoot(this);\n\n    return this.root().child(id);\n};\n\n/// @return an Array of child nodes of the document root\nDocument.prototype.childNodes = function() {\n    assertRoot(this);\n\n    return this.root().childNodes();\n};\n\n/// @return a string representation of the document\nDocument.prototype.toString = function(formatted) {\n    return this._toString(formatted !== undefined ? formatted : true);\n};\n\n/// @return the document version\nDocument.prototype.version = function() {\n    return this._version();\n};\n\n/// @return the document encoding\nDocument.prototype.encoding = function(encoding) {\n    return this._encoding(encoding);\n};\n\n/// @return whether the XmlDocument is valid\nDocument.prototype.validate = function(xsd) {\n    return this._validate(xsd);\n};\n\n/// @return whether the XmlDocument is valid using Relaxed NG\nDocument.prototype.rngValidate = function(rng) {\n    return this._rngValidate(rng);\n};\n\nDocument.prototype.getDtd = function() {\n    return this._getDtd();\n};\n\nDocument.prototype.setDtd = function(name, ext, sys) {\n    if (!name) {\n        throw new Error('Must pass in a DTD name');\n    } else if (typeof name !== 'string') {\n        throw new Error('Must pass in a valid DTD name');\n    }\n\n    var params = [name];\n    if (typeof ext !== 'undefined') {\n        params.push(ext);\n    }\n    if (ext && typeof sys !== 'undefined') {\n        params.push(sys);\n    }\n\n    return this._setDtd.apply(this, params);\n};\n\n/// @return array of namespaces in document\nDocument.prototype.namespaces = function() {\n    assertRoot(this);\n\n    return this.root().namespaces();\n};\n\nDocument.prototype.type = function() {\n    return 'document';\n};\n\nmodule.exports = Document;\n\n/// parse a string into a html document\n/// @param string html string to parse\n/// @param {encoding:string, baseUrl:string} opts html string to parse\n/// @return a Document\nmodule.exports.fromHtml = function(string, opts) {\n    opts = opts || {};\n\n    // if for some reason user did not specify an object for the options\n    if (typeof(opts) !== 'object') {\n        throw new Error('fromHtml options must be an object');\n    }\n\n    return bindings.fromHtml(string, opts);\n};\n\n/// parse a string into a html document fragment\n/// @param string html string to parse\n/// @param {encoding:string, baseUrl:string} opts html string to parse\n/// @return a Document\nmodule.exports.fromHtmlFragment = function(string, opts) {\n    opts = opts || {};\n\n    // if for some reason user did not specify an object for the options\n    if (typeof(opts) !== 'object') {\n        throw new Error('fromHtmlFragment options must be an object');\n    }\n\n    opts.excludeImpliedElements = true;\n\n    return bindings.fromHtml(string, opts);\n};\n\n/// parse a string into a xml document\n/// @param string xml string to parse\n/// @return a Document\nmodule.exports.fromXml = function(string, options) {\n    return bindings.fromXml(string, options || {});\n};\n\n","var bindings = require('./bindings');\n\n/// create a new element on the given document\n/// @param doc the Document to create the element for\n/// @param name the element name\n/// @param {String} [contenn] element content\n/// @constructor\nfunction Element(doc, name, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    } else if (! (doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an ' +\n                        'instance of Document');\n    } else if (!name) {\n        throw new Error('name argument required');\n    }\n\n    return new bindings.Element(doc, name, content);\n}\n\nElement.prototype = bindings.Element.prototype;\n\nElement.prototype.attr = function() {\n    if (arguments.length === 1) {\n        var arg = arguments[0];\n        if (typeof arg === 'object') {\n            // object setter\n            // iterate keys/value to set attributes\n            for (var k in arg) {\n                this._attr(k, arg[k]);\n            };\n            return this;\n        } else if (typeof arg === 'string') {\n            // getter\n            return this._attr(arg);\n        }\n    } else if (arguments.length === 2) {\n        // 2 arg setter\n        var name = arguments[0];\n        var value = arguments[1];\n        this._attr(name, value);\n        return this;\n    }\n};\n\n/// helper method to attach a new node to this element\n/// @param name the element name\n/// @param {String} [content] element content\nElement.prototype.node = function(name, content) {\n    var elem = Element(this.doc(), name, content);\n    this.addChild(elem);\n    return elem;\n};\n\n/// helper method to attach a cdata to this element\n/// @param name the element name\n/// @param {String} [content] element content\nElement.prototype.cdata = function(content) {\n  this.addCData(content);\n  return this;\n};\n\nElement.prototype.get = function() {\n    var res = this.find.apply(this, arguments);\n    if (res instanceof Array) {\n        return res[0];\n    } else {\n        return res;\n    }\n};\n\nElement.prototype.defineNamespace = function(prefix, href) {\n    // if no prefix specified\n    if (!href) {\n        href = prefix;\n        prefix = null;\n    }\n    return new bindings.Namespace(this, prefix, href);\n};\n\nmodule.exports = Element;\n\n","var events = require('events');\n\nvar bindings = require('./bindings');\n\nvar SaxParser = function(callbacks) {\n    var parser = new bindings.SaxParser();\n\n    // attach callbacks\n    for (var callback in callbacks) {\n        parser.on(callback, callbacks[callback]);\n    }\n\n    return parser;\n};\n\n// Overriding the prototype, like util.inherit, wipes out the native binding.\n// Copy over the methods instead.\nfor (var k in events.EventEmitter.prototype)\n    bindings.SaxParser.prototype[k] = events.EventEmitter.prototype[k];\n\nvar SaxPushParser = function(callbacks) {\n    var parser = new bindings.SaxPushParser();\n\n    // attach callbacks\n    for (var callback in callbacks) {\n        parser.on(callback, callbacks[callback]);\n    }\n\n    return parser;\n};\n\n// Overriding the prototype, like util.inherit, wipes out the native binding.\n// Copy over the methods instead.\nfor (var k in events.EventEmitter.prototype)\n    bindings.SaxPushParser.prototype[k] = events.EventEmitter.prototype[k];\n\nmodule.exports.SaxParser = SaxParser;\nmodule.exports.SaxPushParser = SaxPushParser;\n\n","var bindings = require(\"./bindings\");\n\n/// create a new element on the given document\n/// @param doc the Document to create the element for\n/// @param name the element name\n/// @param {String} [contenn] element content\n/// @constructor\n\n\nfunction Text(doc, content) {\n    if (!doc) {\n        throw new Error('document argument required');\n    }\n\n    if (!(doc instanceof bindings.Document)) {\n        throw new Error('document argument must be an instance of Document');\n    }\n\n    if (!content) {\n        throw new Error('content argument required');\n    }\n\n    return new bindings.Text(doc, content);\n}\n\nText.prototype = bindings.Text.prototype;\n\nmodule.exports = Text;\n","module.exports={\n  \"_args\": [\n    [\n      {\n        \"name\": \"libxmljs\",\n        \"raw\": \"libxmljs\",\n        \"rawSpec\": \"\",\n        \"scope\": null,\n        \"spec\": \"latest\",\n        \"type\": \"tag\"\n      },\n      \"/Users/josephferraro/Development/Github/jsforce-fetch\"\n    ]\n  ],\n  \"_from\": \"libxmljs@latest\",\n  \"_id\": \"libxmljs@0.18.0\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/libxmljs\",\n  \"_nodeVersion\": \"6.2.0\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"packages-12-west.internal.npmjs.com\",\n    \"tmp\": \"tmp/libxmljs-0.18.0.tgz_1463968639662_0.2564493091776967\"\n  },\n  \"_npmUser\": {\n    \"email\": \"shtylman@gmail.com\",\n    \"name\": \"defunctzombie\"\n  },\n  \"_npmVersion\": \"3.8.9\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"libxmljs\",\n    \"raw\": \"libxmljs\",\n    \"rawSpec\": \"\",\n    \"scope\": null,\n    \"spec\": \"latest\",\n    \"type\": \"tag\"\n  },\n  \"_requiredBy\": [\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/libxmljs/-/libxmljs-0.18.0.tgz\",\n  \"_shasum\": \"e2993dcf28e4dc60e73486e2db6225dc24d18531\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"libxmljs\",\n  \"_where\": \"/Users/josephferraro/Development/Github/jsforce-fetch\",\n  \"author\": {\n    \"name\": \"Marco Rogers\"\n  },\n  \"bugs\": {\n    \"url\": \"http://github.com/polotek/libxmljs/issues\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Jeff Smick\"\n    }\n  ],\n  \"dependencies\": {\n    \"bindings\": \"1.2.1\",\n    \"nan\": \"2.3.2\"\n  },\n  \"description\": \"libxml bindings for v8 javascript engine\",\n  \"devDependencies\": {\n    \"nodeunit\": \"0.9.0\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"e2993dcf28e4dc60e73486e2db6225dc24d18531\",\n    \"tarball\": \"https://registry.npmjs.org/libxmljs/-/libxmljs-0.18.0.tgz\"\n  },\n  \"engines\": {\n    \"node\": \">=0.8.0\"\n  },\n  \"gitHead\": \"a117c5923e2bed5e7fffa67c0a5b24c62a6970e8\",\n  \"gypfile\": true,\n  \"homepage\": \"https://github.com/polotek/libxmljs#readme\",\n  \"license\": \"MIT\",\n  \"main\": \"./index\",\n  \"maintainers\": [\n    {\n      \"email\": \"marco.rogers@gmail.com\",\n      \"name\": \"polotek\"\n    },\n    {\n      \"email\": \"shtylman@gmail.com\",\n      \"name\": \"defunctzombie\"\n    }\n  ],\n  \"name\": \"libxmljs\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/polotek/libxmljs.git\"\n  },\n  \"scripts\": {\n    \"install\": \"node-gyp rebuild\",\n    \"test\": \"node --expose_gc ./node_modules/.bin/nodeunit test\"\n  },\n  \"version\": \"0.18.0\"\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * @license\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.15.0';\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for function metadata. */\n  var BIND_FLAG = 1,\n      PARTIAL_FLAG = 32;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"'`]/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject() {\n    return false;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var objectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array of at least `200` elements\n   * and any iteratees accept only one argument. The heuristic for whether a\n   * section qualifies for shortcut fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Used by `_.defaults` to customize its `_.assignIn` use.\n   *\n   * @private\n   * @param {*} objValue The destination value.\n   * @param {*} srcValue The source value.\n   * @param {string} key The key of the property to assign.\n   * @param {Object} object The parent object of `objValue`.\n   * @returns {*} Returns the value to assign.\n   */\n  function assignInDefaults(objValue, srcValue, key, object) {\n    if (objValue === undefined ||\n        (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n      return srcValue;\n    }\n    return objValue;\n  }\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = value;\n    }\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} prototype The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  function baseCreate(proto) {\n    return isObject(proto) ? objectCreate(proto) : {};\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && objectToString.call(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {boolean} [bitmask] The bitmask of comparison flags.\n   *  The bitmask may be composed of the following flags:\n   *     1 - Unordered comparison\n   *     2 - Partial comparison\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, customizer, bitmask, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = arrayTag,\n        othTag = arrayTag;\n\n    if (!objIsArr) {\n      objTag = objectToString.call(object);\n      objTag = objTag == argsTag ? objectTag : objTag;\n    }\n    if (!othIsArr) {\n      othTag = objectToString.call(other);\n      othTag = othTag == argsTag ? objectTag : othTag;\n    }\n    var objIsObj = objTag == objectTag && !isHostObject(object),\n        othIsObj = othTag == objectTag && !isHostObject(other),\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n        : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObject(value) && objectToString.call(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} props The property identifiers to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = array;\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      assignValue(object, key, newValue === undefined ? source[key] : newValue);\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & UNORDERED_COMPARE_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, customizer, bitmask, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n   *  for more details.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n    var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string key if it's not a string or symbol.\n   *\n   * @private\n   * @param {*} value The value to inspect.\n   * @returns {string|symbol} Returns the key.\n   */\n  var toKey = String;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length,\n        args = Array(length ? length - 1 : 0),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return length\n      ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n      : [];\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array ? array.length : 0;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array ? array.length : 0;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array ? array.length : 0;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array ? array.length : 0;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array ? array.length : 0;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity]\n   *  The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _([1, 2]).forEach(function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, function(o) { return o.user; });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   *\n   * _.sortBy(users, 'user', function(o) {\n   *   return Math.floor(o.age / 10);\n   * });\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, BIND_FLAG | PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one or more milliseconds.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  function isArguments(value) {\n    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n      (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n  }\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * This method is like `_.isArrayLike` except that it also checks if `value`\n   * is an object.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array-like object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArrayLikeObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLikeObject(document.body.children);\n   * // => true\n   *\n   * _.isArrayLikeObject('abc');\n   * // => false\n   *\n   * _.isArrayLikeObject(_.noop);\n   * // => false\n   */\n  function isArrayLikeObject(value) {\n    return isObjectLike(value) && isArrayLike(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && objectToString.call(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are **not** supported.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 8-9 which returns 'object' for typed array and other constructors.\n    var tag = isObject(value) ? objectToString.call(value) : '';\n    return tag == funcTag || tag == genTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && objectToString.call(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * This method is like `_.assignIn` except that it accepts `customizer`\n   * which is invoked to produce the assigned values. If `customizer` returns\n   * `undefined`, assignment is handled by the method instead. The `customizer`\n   * is invoked with five arguments: (objValue, srcValue, key, object, source).\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extendWith\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} sources The source objects.\n   * @param {Function} [customizer] The function to customize assigned values.\n   * @returns {Object} Returns `object`.\n   * @see _.assignWith\n   * @example\n   *\n   * function customizer(objValue, srcValue) {\n   *   return _.isUndefined(objValue) ? srcValue : objValue;\n   * }\n   *\n   * var defaults = _.partialRight(_.assignInWith, customizer);\n   *\n   * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n    copyObject(source, keysIn(source), object, customizer);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties ? assign(result, properties) : result;\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(args) {\n    args.push(undefined, assignInDefaults);\n    return assignInWith.apply(undefined, args);\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [props] The property identifiers to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = baseRest(function(object, props) {\n    return object == null ? {} : basePick(object, baseMap(baseFlatten(props, 1), toKey));\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object ? baseValues(object, keys(object)) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n   * their corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * Backticks are escaped because in IE < 9, they can break out of\n   * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n   * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n   * [#133](https://html5sec.org/#133) of the\n   * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","module.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2 (s) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable().wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nfunction prependListener(emitter, event, fn) {\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = bufferShim.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) processNextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) processNextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = bufferShim.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : processNextTick;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream;\n(function () {\n  try {\n    Stream = require('st' + 'ream');\n  } catch (_) {} finally {\n    if (!Stream) Stream = require('events').EventEmitter;\n  }\n})();\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n    });\n  } catch (_) {}\n})();\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = bufferShim.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) processNextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) processNextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}","'use strict';\n\nvar Buffer = require('buffer').Buffer;\n/*<replacement>*/\nvar bufferShim = require('buffer-shims');\n/*</replacement>*/\n\nmodule.exports = BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return bufferShim.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = bufferShim.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\nif (!process.browser && process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n}\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n"],"sourceRoot":"/source/"}